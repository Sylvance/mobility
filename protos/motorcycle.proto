syntax = "proto3";

package mobility.services;

service MotorcycleServices {
    rpc ListMotorcycles(ListMotorcyclesRequest) returns (ListMotorcyclesResponse) {}

    rpc GetMotorcycle(GetMotorcycleRequest) returns (GetMotorcycleResponse) {}

    rpc CreateMotorcycle(CreateMotorcycleRequest) returns (CreateMotorcycleResponse) {}

    rpc UpdateMotorcycle(UpdateMotorcycleRequest) returns (UpdateMotorcycleResponse) {}

    rpc DeleteMotorcycle(DeleteMotorcycleRequest) returns (DeleteMotorcycleResponse) {}

    rpc ReceiveBatteryForMotorcycle(ReceiveBatteryForMotorcycleRequest) returns (ReceiveBatteryForMotorcycleResponse) {}

    rpc ReturnBatteryForMotorcycle(ReturnBatteryForMotorcycleRequest) returns (ReturnBatteryForMotorcycleResponse) {}

    rpc AssignFlightForMotorcycle(AssignFlightForMotorcycleRequest) returns (AssignFlightForMotorcycleResponse) {}

    rpc RetrieveCurrentFlightForMotorcycle(RetrieveCurrentFlightForMotorcycleRequest) returns (RetrieveCurrentFlightForMotorcycleResponse) {}

    rpc RetrieveCurrentLocationForMotorcycle(RetrieveCurrentLocationForMotorcycleRequest) returns (RetrieveCurrentLocationForMotorcycleResponse) {}

    rpc RetrieveDistanceMovedInFlightForMotorcycle(RetrieveDistanceMovedInFlightForMotorcycleRequest) returns (RetrieveDistanceMovedInFlightForMotorcycleResponse) {}
}

message Motorcycle {
    string issue_name = 1;
    string motorcycle_id = 2;
    string type = 3;
    string created_at = 4;
    string modified_at = 5;
    string deleted_at = 6;
    string current_battery_id = 7;
    string current_flight_id = 8;
    string current_location_id = 9;
    string current_distance_id = 10;
}

message MotorcyclesList {
    repeated Motorcycle motorcycles = 1;
}

message MotorcycleSuccessResponse {
    string content = 1;
    string type = 2;
}

message MotorcycleErrorResponse {
    repeated string content = 1;
    string type = 2;
}

message ListMotorcyclesRequest {
    int32 page_size = 1;
}

message ListMotorcyclesResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        MotorcyclesList motorcycles_list = 3;
    }
}

message GetMotorcycleRequest {
    string motorcycle_id = 1;
}

message GetMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        Motorcycle motorcycle = 3;
    }
}

message CreateMotorcycleRequest {
    Motorcycle motorcycle = 1;
}

message CreateMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        Motorcycle motorcycle = 3;
    }
}

message UpdateMotorcycleRequest {
    Motorcycle motorcycle = 1;
}

message UpdateMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        Motorcycle motorcycle = 3;
    }
}

message DeleteMotorcycleRequest {
    string motorcycle_id = 1;
}

message DeleteMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        MotorcycleSuccessResponse success = 3;
    }
}

message ReceiveBatteryForMotorcycleRequest {
    string motorcycle_id = 1;
}

message ReceiveBatteryForMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        string current_battery_id = 3;
    }
}

message ReturnBatteryForMotorcycleRequest {
    string motorcycle_id = 1;
    string battery_id = 2;
}

message ReturnBatteryForMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        MotorcycleSuccessResponse success = 3;
    }
}

message AssignFlightForMotorcycleRequest {
    string motorcycle_id = 1;
}

message AssignFlightForMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        MotorcycleSuccessResponse success = 3;
    }
}

message RetrieveCurrentFlightForMotorcycleRequest {
    string motorcycle_id = 1;
}

message RetrieveCurrentFlightForMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        string current_flight_id = 3;
    }
}

message RetrieveCurrentLocationForMotorcycleRequest {
    string motorcycle_id = 1;
}

message RetrieveCurrentLocationForMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        string current_location_id = 3;
    }
}

message RetrieveDistanceMovedInFlightForMotorcycleRequest {
    string motorcycle_id = 1;
    string current_flight_id = 2;
}

message RetrieveDistanceMovedInFlightForMotorcycleResponse {
    bool successful = 1;
    oneof result {
        MotorcycleErrorResponse error = 2;
        string current_distance_id = 3;
    }
}
